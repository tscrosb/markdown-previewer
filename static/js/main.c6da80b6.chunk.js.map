{"version":3,"sources":["startingText.md","App.js","reportWebVitals.js","index.js"],"names":["App","text","useState","editorText","setEditorText","useEffect","marked","setOptions","breaks","smartLists","fetch","defaultTextPath","then","res","className","id","value","onChange","event","target","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,MAA0B,wC,OC+C1BA,MA1Cf,WAAgB,IAcWC,EAdZ,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,KAkBb,OAfAC,qBAAU,WACRC,IAAOC,WAAW,CAAEC,QAAQ,EAAMC,YAAY,IAC9CC,MAAMC,GACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIZ,UAChBW,MAAK,SAAAX,GAAI,OAAIG,EAAcH,QAC7B,IAWD,sBAAKa,UAAU,MAAf,UACE,oDACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,wCACA,0BACEC,GAAG,SACHC,MAAOb,EACPc,SAjBS,SAAAC,GACjBd,EAAcc,EAAMC,OAAOH,aAmBvB,sBAAKF,UAAU,oBAAf,UACE,yCACA,yBACEC,GAAG,UACHK,yBApBenB,EAoB2BE,EAnB3C,CAAEkB,OAAQf,IAAOL,iBCRbqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c6da80b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/startingText.9417b5cf.md\";","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport marked from \"marked\";\nimport defaultTextPath from \"./startingText.md\";\n\nfunction App() {\n  const [editorText, setEditorText] = useState(\"\");\n\n  useEffect(() => {\n    marked.setOptions({ breaks: true, smartLists: true });\n    fetch(defaultTextPath)\n      .then(res => res.text())\n      .then(text => setEditorText(text));\n  }, []);\n\n  const handleText = event => {\n    setEditorText(event.target.value);\n  };\n\n  const reactMarkupParse = text => {\n    return { __html: marked(text) };\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>MarkDown Previewer</h1>\n      <div className=\"markdown-app\">\n        <div className=\"editor-container\">\n          <h2>Editor</h2>\n          <textarea\n            id=\"editor\"\n            value={editorText}\n            onChange={handleText}\n          ></textarea>\n        </div>\n        <div className=\"preview-container\">\n          <h2>Preview</h2>\n          <article\n            id=\"preview\"\n            dangerouslySetInnerHTML={reactMarkupParse(editorText)}\n          ></article>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}